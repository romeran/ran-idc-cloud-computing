AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  parking-lot-app

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Resources:
  ParkingLotFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: parking_lot/
      Handler: app.lambda_handler
      Runtime: python3.8
      Policies:
        # Give DynamoDB Full Access to your Lambda Function
        - AmazonDynamoDBFullAccess
      Events:
        ParkingLotEntry:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /entry
            Method: post
        ParkingLotExit:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /exit
            Method: post

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  ParkingLotApi:
    Description: "API Gateway endpoint URL for Prod stage for Parking Lot function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/parking_lot/"
  ParkingLotFunction:
    Description: "Parking Lot Lambda Function ARN"
    Value: !GetAtt ParkingLotFunction.Arn
  ParkingLotFunctionIamRole:
    Description: "Implicit IAM Role created for Parking Lot function"
    Value: !GetAtt ParkingLotFunctionRole.Arn
